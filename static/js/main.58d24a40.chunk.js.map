{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.jsx","Components/App.jsx","index.js","Components/ContactForm/ContactForm.module.css","Components/Contacts/Contacts.module.css","Components/app.module.css"],"names":["ContactForm","formSubmit","validate","useState","name","setName","number","setNumber","className","s","interface","onSubmit","e","preventDefault","obj","id","uuidv4","document","getElementById","value","form","type","onChange","target","pattern","title","required","inputTel","buttonAdd","Contacts","contacts","filter","fnFilter","removeContact","map","item","includes","li","onClick","button","App","filterName","setFilterName","setContacts","useEffect","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","section","data","prev","dataUser","res","isValid","length","alert","contact","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.58d24a40.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({formSubmit, validate }) {\r\n    const [name, setName] = useState(''); \r\n    const [number, setNumber] = useState('');\r\n\r\nconst handleChangephnone = e => {\r\n        const value = e.target.value;\r\n        setNumber( value );\r\n        \r\n            \r\n    }\r\n    const handleChange = (e) => {\r\n            const value = e.target.value;\r\n        setName( value );\r\n    }\r\n\r\n\r\n    \r\n    \r\n    const handleSubmit = e => { \r\n        e.preventDefault();\r\n        const obj = {\r\n            name: name,\r\n            number: number,\r\n            id: uuidv4(),\r\n        }\r\n        {\r\n            validate(obj) && formSubmit(obj)\r\n        }\r\n        {\r\n            setName( '' );\r\n            setNumber( '' );\r\n            document.getElementById('name').value = '';\r\n            document.getElementById('number').value = '';\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className={s.interface}>\r\n                     \r\n                <form onSubmit={handleSubmit} className={s.form}>\r\n                    <div>\r\n                        <label>\r\n                                <p>Name</p> \r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                        onChange={handleChange}\r\n                                        id=\"name\"\r\n                                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                                    required\r\n                                />\r\n                        </label>\r\n                            \r\n                        <label>\r\n                            Phone   \r\n                            <input\r\n                                className={s.inputTel}\r\n                                    type=\"tel\"\r\n                                        name=\"number\"\r\n                                        onChange={handleChangephnone}\r\n                                        id=\"number\"\r\n                                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                                    required\r\n                                />\r\n                        </label> \r\n                    </div>\r\n                    \r\n                        <button type=\"submit\"  className={s.buttonAdd}>Add contact</button>\r\n                    </form>\r\n               </div>\r\n\r\n    )\r\n\r\n}\r\n","import s from './Contacts.module.css';\r\n\r\nconst Contacts = ({ contacts, filter, fnFilter, removeContact}) => {\r\n    return (\r\n        <div>\r\n            <h2>Contacts</h2>\r\n                <input type=\"text\" onChange={fnFilter}/>\r\n\r\n            <ul>\r\n                {contacts.map(item => (\r\n\r\n                    item.name.includes(filter) ? <li key={item.id} className={s.li}> {item.name}: {item.number} <button type=\"button\" id={item.id} onClick={removeContact} className={s.button}>Delete</button> </li> : false\r\n                ))}\r\n                    \r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Contacts from './Contacts/Contacts';\r\nimport s from '../Components/app.module.css';\r\n\r\n\r\nexport default function App() {\r\n    const [filterName, setFilterName] = useState('');\r\n    const [contacts, setContacts] = useState([\r\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ]);\r\n\r\n    useEffect(() => {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parseContacts = JSON.parse(contacts);\r\n        if (parseContacts) setContacts(parseContacts);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }, [contacts])\r\n\r\n    const formSubmit = (data) => setContacts(prev => ([...prev, data]));\r\n\r\n    const removeContact = e => {\r\n        setContacts(prev => (\r\n            contacts.filter(contact => contact.id !== e.target.id)\r\n    ));\r\n    }\r\n\r\n    const validate = (dataUser) => {\r\n        const res = contacts.filter(item => (\r\n            item.name === dataUser.name\r\n        ))\r\n        let isValid = true;\r\n        const notValid = () => {\r\n            isValid = false;\r\n        };\r\n        res.length > 0 && alert(`Eror, ${dataUser.name} is already in contacts`)\r\n        res.length > 0 && notValid()\r\n        return (isValid);\r\n    }\r\n\r\n        const filter = e => {\r\n            const value = e.target.value;\r\n            setFilterName( value );\r\n        };\r\n\r\n\r\n\r\n    return (\r\n            <div className={s.section}>\r\n                <h1>PhoneBook</h1>\r\n                \r\n                <ContactForm formSubmit={formSubmit} validate={validate} />\r\n                <Contacts contacts={contacts} filter={filterName} fnFilter={filter} removeContact={removeContact} />\r\n            </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interface\":\"ContactForm_interface__3SVBW\",\"form\":\"ContactForm_form__P-ao2\",\"inputTel\":\"ContactForm_inputTel__1oUDu\",\"buttonAdd\":\"ContactForm_buttonAdd__1tClB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__25RJL\",\"button\":\"Contacts_button__bFcr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"app_section__1Gn8Y\"};"],"sourceRoot":""}